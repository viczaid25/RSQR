@model IEnumerable<RSQR.Models.Reporte>
<style>
    /* Estilos para los filtros */
    .filter-container {
        min-width: 100px;
        margin-bottom: 5px;
    }

        .filter-container select,
        .filter-container input {
            width: 100% !important;
            font-size: 0.8rem;
            padding: 0.25rem 0.5rem;
        }

    /* Asegurar que los encabezados con filtros tengan suficiente espacio */
    thead th {
        padding-top: 0 !important;
        vertical-align: bottom !important;
    }

    /* Consulta de medios correctamente estructurada */
    @@media (max-width: 768px) {
        .filter-container {
            min-width: 80px;
        }
    }
</style>
@{
    ViewData["Title"] = "REPORTS";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="display-6 text-dark fw-bold">@ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-primary rounded-pill shadow-sm">
        <i class="fas fa-plus me-2"></i> New Report
    </a>
</div>

<div class="card shadow-sm border-0">
    <div class="card-body p-0">
        <div class="table-responsive rounded-3 overflow-hidden">
            <table id="reportesTable" class="table table-hover align-middle mb-0">
                <thead class="bg-light">
                    <tr>
                        <th class="ps-4">ID</th>
                        <th>Date</th>
                        <th>Level</th>
                        <th>User</th>
                        <th>Line</th>
                        <th>Problem Title</th>
                        <th>Affected Parts</th>
						<th>PPM Impact</th>
                        <th>Evidence</th>
                        <th class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="border-top">
                            <td class="ps-4 fw-bold">@item.Id</td>
                            <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                            <td>
                                <span class="badge bg-@GetProblemRankBadgeColor(item.ProblemRank)">
                                    @item.ProblemRank
                                </span>
                            </td>
                            <td>@item.UserName</td>
                            <td>@item.Linea</td>
                            <td class="text-truncate" style="max-width: 200px;" title="@item.TituloProblema">
                                @item.TituloProblema
                            </td>
                            <td>@item.NumParteAfectado</td>
                            <td>
                                @if (item.ImpactoPPM)
                                {
                                    <span class="badge bg-danger">
                                        <i class="fas fa-times-circle me-1"></i> With Impact
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check-circle me-1"></i> No Impact
                                    </span>
                                }
                            </td>
                            <td>
                                @if (item.EvidenciaFotografica != null && item.EvidenciaFotografica.Count > 0)
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check-circle me-1"></i> With evidence
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">
                                        <i class="fas fa-times-circle me-1"></i> Without evidence
                                    </span>
                                }
                            </td>
                            <td class="text-end pe-4">
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary rounded-start-pill">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger rounded-end-pill">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializar DataTable con configuración extendida
            var table = $('#reportesTable').DataTable({
                responsive: true,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json'
                },
                columnDefs: [
                    { orderable: false, targets: [8, 9] }, // Deshabilitar ordenación en columnas Evidence y Actions
                    { searchable: false, targets: [8, 9] } // Deshabilitar búsqueda en columnas Evidence y Actions
                ],
                dom: '<"top"f>rt<"bottom"lip><"clear">',
                initComplete: function() {
                    $('.dataTables_filter input').addClass('form-control');
                    $('.dataTables_length select').addClass('form-select');

                    // Agregar campos de filtro a cada columna
                    this.api().columns().every(function(index) {
                        var column = this;

                        // No agregar filtro a las columnas de Evidence y Actions
                        if (index === 8 || index === 9) return;

                        // Crear contenedor para el filtro
                        var header = $(column.header());
                        var title = header.text().trim();
                        var filterContainer = $('<div class="filter-container"></div>').appendTo(header);

                        // Caso especial para columna de fechas
                        if (index === 1) {
                            $('<input type="date" class="form-control form-control-sm mb-2" placeholder="Filtrar '+title+'" />')
                                .appendTo(filterContainer)
                                .on('change', function() {
                                    if (column.search() !== this.value) {
                                        column.search(this.value).draw();
                                    }
                                });
                            return;
                        }

                        // Caso especial para columna de nivel (ProblemRank)
                        if (index === 2) {
                            var select = $('<select class="form-select form-select-sm mb-2"><option value="">Todos</option></select>')
                                .appendTo(filterContainer)
                                .on('change', function() {
                                    column.search(this.value).draw();
                                });

                            // Obtener valores únicos de la columna
                            column.data().unique().sort().each(function(d) {
                                var value = $.trim(d);
                                if (value) {
                                    select.append('<option value="'+value+'">'+value+'</option>');
                                }
                            });
                            return;
                        }

                        // Caso especial para columna PPM Impact (booleana)
                        if (index === 7) {
                            $('<select class="form-select form-select-sm mb-2"><option value="">Todos</option><option value="true">With Impact</option><option value="false">No Impact</option></select>')
                                .appendTo(filterContainer)
                                .on('change', function() {
                                    column.search(this.value).draw();
                                });
                            return;
                        }

                        // Para columnas con texto normal
                        var select = $('<select class="form-select form-select-sm mb-2"><option value="">Todos</option></select>')
                            .appendTo(filterContainer)
                            .on('change', function() {
                                column.search(this.value).draw();
                            });

                        // Obtener valores únicos de la columna
                        column.data().unique().sort().each(function(d) {
                            var value = $.trim(d);
                            if (value) {
                                select.append('<option value="'+value+'">'+value+'</option>');
                            }
                        });
                    });
                }
            });

            // Aplicar estilos a los filtros
            $('thead th').css({
                'vertical-align': 'bottom',
                'position': 'relative'
            });

            $('.filter-container').css({
                'min-width': '100px'
            });
        });
    </script>
}

@functions {
    public string GetProblemRankBadgeColor(string problemRank)
    {
        switch (problemRank?.ToUpper())
        {
            case "ALTO":
                return "danger";
            case "MEDIO":
                return "warning";
            case "BAJO":
                return "success";
            default:
                return "secondary";
        }
    }
}